pipeline {
    agent any 
    
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/luisjuan9697/EKS-TF.git'
            }
        }
        
        stage('Installing Dependencies') {
            steps {
                dir('Tetris-V1') {
                    sh 'npm install'
                }
            }
        }
        
        stage('OWASP Dependency-Check Scan') {
            steps {
                dir('Tetris-V1') {
                    dependencyCheck additionalArguments: "--scan ./ --disableYarnAudit --disableNodeAudit --nvd-api-key nvd-api-key",
                                    odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        
        stage('Trivy File Scan') {
            steps {
                dir('Tetris-V1') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        
        stage("Docker Image Build") {
            steps {
                script {
                    dir('Tetris-V1') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t tetrisv1 .'
                        }
                    }
                }
            }
        }
        
        stage("Docker Image Pushing") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                        sh "docker tag tetrisv1 luisjuanguerrero026/tetrisv1:${BUILD_NUMBER}"
                        sh "docker push luisjuanguerrero026/tetrisv1:${BUILD_NUMBER}"
                    }
                }
            }
        }
        
        stage("TRIVY Image Scan") {
            steps {
                script {
                    sh "trivy image luisjuanguerrero026/tetrisv1:${BUILD_NUMBER} > trivyimage.txt" 
                }
            }
        }
        
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/luisjuan9697/EKS-TF.git'
            }
        }
        
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "EKS-TF"
                GIT_USER_NAME = "luisjuan9697"
            }
            steps {
                script {
                    dir('Manifest-file') {
                        try {
                            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                                sh '''
                                    git config user.email "lluisjuanguerrero@gmail.com"
                                    git config user.name "luisjuan9697"
                                    BUILD_NUMBER=${BUILD_NUMBER}
                                    echo $BUILD_NUMBER
                                    imageTag=$(grep -oP '(?<=tetrisv1:)[^ ]+' deployment-service.yml)
                                    echo $imageTag
                                    sed -i "s/tetrisv1:${imageTag}/tetrisv1:${BUILD_NUMBER}/" deployment-service.yml
                                    git add deployment-service.yml
                                    git commit -m "Update deployment Image to version \${BUILD_NUMBER}"
                                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                                '''
                            }
                        } catch (Exception e) {
                            echo "Failed to update deployment file: ${e.message}"
                            currentBuild.result = 'FAILURE'
                            error('Failed to update deployment file')
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline finished'
        }
    }
}
